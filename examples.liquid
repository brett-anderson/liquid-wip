{% if product.type == 'Love' %}
  This is a love potion!
{% elsif product.available %}
  This is available!
{% else %}
  womp
{% endif %}

{% assign numbers = '1,2,3,4,5' | split: ',' %}

{% for item in numbers limit:2 -%}
  {{ item }}
{%- endfor %}

{% unless product.has_only_default_variant %}
  // Variant selection functionality
{% endunless %}

{% case product.type %}
  {% when 'Health' %}
    This is a health potion.
  {% when 'Love' %}
    This is a love potion.
  {% else %}
    This is a potion.
{% endcase %}

{% form 'activate_customer_password', article %}
	{{ form | currency_selector }}
{% endform %}

{% form "product", product, id: 'custom-id', class: 'custom-class', data-example: '100' %}
  <!-- form content -->
{% endform %}
{% style %}
  .h1 {
    color: {{ settings.colors_accent_1 }};
  }
{% endstyle %}

{% for product in collection.products -%}
  {{ product.title }}
{%- endfor %}

{% for variable in (number..number) %}
  expression
{% endfor %}

{% for product in collection.products offset: 2 -%}
  {{ product.title }}
{%- endfor %}

{% for i in (1..3) -%}
  {{ i }}
{%- endfor %}

{%- assign lower_limit = 2 -%}
{%- assign upper_limit = 4 -%}

{% for i in (lower_limit..upper_limit) -%}
  {{ i }}
{%- endfor %}

{% for product in collection.products reversed -%}
  {{ product.title }}
{%- endfor %}

{% for page in pages -%}
  {%- if forloop.length > 0 -%}
    {{ page.title }}{% unless forloop.last %}, {% endunless -%}
  {%- endif -%}
{% endfor %}

{% for product in collection.products %}
  {{ product.title }}<br>
{% else %}
  There are no products in this collection.
{% endfor %}

{% for i in (1..5) -%}
  {%- if i == 4 -%}
    {% break %}
  {%- else -%}
    {{ i }}
  {%- endif -%}
{%- endfor %}

{% for i in (1..5) -%}
  {%- if i == 4 -%}
    {% continue %}
  {%- else -%}
    {{ i }}
  {%- endif -%}
{%- endfor %}

{% for i in (1..4) -%}
  {% cycle 'one', 'two', 'three' %}
{%- endfor %}

{% for i in (1..4) -%}
  {% cycle 'group_1': 'one', 'two', 'three' %}
{%- endfor %}


{% tablerow product in collection.products limit: 2 %}
	{{ product.title }}
{% endtablerow %}

{% paginate collection.products by 5 %}
  {% for product in collection.products -%}
    {{ product.title }}
  {%- endfor %}

  {{- paginate | default_pagination }}
{% endpaginate %}

{% comment %}
  content
{% endcomment %}

{% echo product.title %}

{% liquid
  echo product.price | money
%}

{% # this is a comment %}

{%
  ###############################
  # This is a comment
  # across multiple lines
  ###############################
%}

{% liquid
  # this is a comment
  assign topic = 'Learning about comments!'
  echo topic
%}

{% liquid
  assign product_type = product.type | downcase
  assign message = ''

  case product_type
    when 'health'
      assign message = 'This is a health potion!'
    when 'love'
      assign message = 'This is a love potion!'
    else
      assign message = 'This is a potion!'
  endcase

  echo message
%}

{% raw %}
{{ 2 | plus: 2 }} equals 4.
{% endraw %}


{% include 'filename' %}
{% layout 'full-width' %}
{% layout none %}
{% render 'filename' for array as item %}
{% render 'filename' with object as name %}
{% section 'header' %}

{%- assign product_title = product.title | upcase -%}

{{ product_title }}

{% capture variable %}
  value
{% endcapture %}
{% decrement variable %}
{% increment variable %}
{{ 2 | plus: 2 }} equals 4.

{% unless true and false and false or true %}
  This evaluates to false, since Liquid checks tags like this:

  true and (false and (false or true))
  true and (false and true)
  true and false
  false
{% endunless %}

{% assign lol = product.variants[1] %}
